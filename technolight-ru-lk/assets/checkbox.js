import{d as R,r as l,m as C,j as c,e as k,R as H,f as g,S as M,u as $,g as q,h as Y,U as D,W as T,n as U,X as W,Y as z,t as m,l as B}from"./index.js";import{d as F}from"./attr.js";import{u as j}from"./use-field-context.js";const[V,f]=R({name:"CheckboxContext",hookName:"useCheckboxContext",providerName:"<CheckboxProvider />"}),w=l.forwardRef((r,o)=>{const e=f(),t=C(e.getControlProps(),r);return c.jsx(k.div,{...t,ref:o})});w.displayName="CheckboxControl";function X(r){const{value:o,onChange:e,defaultValue:t}=r,[n,a]=l.useState(t),s=o!==void 0,i=s?o:n,u=l.useCallback(h=>(s||a(h),e?.(h)),[s,e]);return[i,u]}function _(r={}){const{defaultValue:o,value:e,onValueChange:t,disabled:n,readOnly:a,name:s,invalid:i}=r,u=!(n||a),h=H(t,{sync:!0}),[b,p]=X({value:e,defaultValue:o||[],onChange:h}),x=d=>b.some(v=>String(v)===String(d)),P=d=>{x(d)?O(d):y(d)},y=d=>{u&&(x(d)||p(b.concat(d)))},O=d=>{u&&p(b.filter(v=>String(v)!==String(d)))};return{isChecked:x,value:b,name:s,disabled:!!n,readOnly:!!a,invalid:!!i,setValue:p,addValue:y,toggleValue:P,getItemProps:d=>({checked:d.value!=null?x(d.value):void 0,onCheckedChange(){d.value!=null&&P(d.value)},name:s,disabled:n,readOnly:a,invalid:i})}}const[J,K]=R({name:"CheckboxGroupContext",hookName:"useCheckboxGroupContext",providerName:"<CheckboxGroupProvider />",strict:!1}),S=l.forwardRef((r,o)=>{const[e,t]=g()(r,["defaultValue","value","onValueChange","disabled","invalid","readOnly","name"]),n=_(e);return c.jsx(J,{value:n,children:c.jsx(k.div,{ref:o,role:"group",...t,...M.build().group.attrs})})});S.displayName="CheckboxGroup";const G=l.forwardRef((r,o)=>{const e=f(),t=C(e.getHiddenInputProps(),r),n=j();return c.jsx(k.input,{"aria-describedby":n?.ariaDescribedby,...t,ref:o})});G.displayName="CheckboxHiddenInput";const I=l.forwardRef((r,o)=>{const e=f(),t=C(e.getLabelProps(),r);return c.jsx(k.span,{...t,ref:o})});I.displayName="CheckboxLabel";const Q=(r={})=>{const o=K(),e=j(),t=l.useMemo(()=>C(r,o?.getItemProps({value:r.value})??{}),[r,o]),n=l.useId(),{getRootNode:a}=$(),{dir:s}=q(),i={id:n,ids:{label:e?.ids.label,hiddenInput:e?.ids.control},dir:s,disabled:e?.disabled,readOnly:e?.readOnly,invalid:e?.invalid,required:e?.required,getRootNode:a,...t},u=Y(T,i);return D(u,U)},N=l.forwardRef((r,o)=>{const[e,t]=g()(r,["checked","defaultChecked","disabled","form","id","ids","invalid","name","onCheckedChange","readOnly","required","value"]),n=Q(e),a=C(n.getRootProps(),t);return c.jsx(V,{value:n,children:c.jsx(k.label,{...a,ref:o})})});N.displayName="CheckboxRoot";const L=l.forwardRef((r,o)=>{const[{value:e},t]=g()(r,["value"]),n=C(e.getRootProps(),t);return c.jsx(V,{value:e,children:c.jsx(k.label,{...n,ref:o})})});L.displayName="CheckboxRootProvider";const Z=l.forwardRef(function(o,e){const t=W({key:"checkmark",recipe:o.recipe}),[n,a]=t.splitVariantProps(o),{checked:s,indeterminate:i,disabled:u,unstyled:h,children:b,...p}=a,x=h?z:t(n);return c.jsx(m.svg,{ref:e,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"3px",strokeLinecap:"round",strokeLinejoin:"round","data-state":i?"indeterminate":s?"checked":"unchecked","data-disabled":F(u),css:[x,o.css],...p,children:i?c.jsx("path",{d:"M5 12h14"}):s?c.jsx("polyline",{points:"20 6 9 17 4 12"}):null})}),{withProvider:A,withContext:E,useStyles:ee}=B({key:"checkbox"});A(L,"root",{forwardAsChild:!0});const ce=A(N,"root",{forwardAsChild:!0}),ae=E(I,"label",{forwardAsChild:!0}),oe=l.forwardRef(function(o,e){const{checked:t,indeterminate:n,...a}=o,s=f(),i=ee();return t&&s.checked?c.jsx(m.svg,{ref:e,asChild:!0,...a,css:[i.indicator,o.css],children:t}):n&&s.indeterminate?c.jsx(m.svg,{ref:e,asChild:!0,...a,css:[i.indicator,o.css],children:n}):c.jsx(Z,{ref:e,checked:s.checked,indeterminate:s.indeterminate,disabled:s.disabled,unstyled:!0,...a,css:[i.indicator,o.css]})}),de=E(w,"control",{forwardAsChild:!0,defaultProps:{children:c.jsx(oe,{})}});m(S,{base:{display:"flex",flexDirection:"column",gap:"1.5"}},{forwardAsChild:!0});const ie=G;export{ce as C,ie as a,de as b,ae as c};
