import{Z as f,_ as l,$ as x,r as d,m as g,j as v,e as h,y as b,a0 as m}from"./index.js";import{u as y}from"./use-field-context.js";var w=e=>{if(!e)return;const t=f(e),o=l(e),n=x(e),r=()=>{requestAnimationFrame(()=>{e.style.height="auto";let s;t.boxSizing==="content-box"?s=e.scrollHeight-(parseFloat(t.paddingTop)+parseFloat(t.paddingBottom)):s=e.scrollHeight+parseFloat(t.borderTopWidth)+parseFloat(t.borderBottomWidth),t.maxHeight!=="none"&&s>parseFloat(t.maxHeight)?(t.overflowY==="hidden"&&(e.style.overflowY="scroll"),s=parseFloat(t.maxHeight)):t.overflowY!=="hidden"&&(e.style.overflowY="hidden"),e.style.height=`${s}px`})};e.addEventListener("input",r),e.form?.addEventListener("reset",r);const i=Object.getPrototypeOf(e),a=Object.getOwnPropertyDescriptor(i,"value");Object.defineProperty(e,"value",{...a,set(){a?.set?.apply(this,arguments),r()}});const c=new o.ResizeObserver(()=>{requestAnimationFrame(()=>r())});c.observe(e);const p=new o.MutationObserver(()=>r());return p.observe(e,{attributes:!0,attributeFilter:["rows","placeholder"]}),n.fonts?.addEventListener("loadingdone",r),()=>{e.removeEventListener("input",r),e.form?.removeEventListener("reset",r),n.fonts?.removeEventListener("loadingdone",r),c.disconnect(),p.disconnect()}};const u=d.forwardRef((e,t)=>{const{autoresize:o,...n}=e,r=d.useRef(null),i=y(),a=g(i?.getTextareaProps(),{style:{resize:o?"none":void 0}},n);return d.useEffect(()=>{if(o)return w(r.current)},[o]),v.jsx(h.textarea,{...a,ref:b(t,r)})});u.displayName="FieldTextarea";const{withContext:F}=m({key:"badge"}),T=F("span"),{withContext:E}=m({key:"textarea"}),z=E(u);export{T as B,z as T};
