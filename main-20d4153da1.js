!function(e){function t(t){for(var n,c,l=t[0],i=t[1],u=t[2],m=0,f=[];m<l.length;m++)c=l[m],Object.prototype.hasOwnProperty.call(a,c)&&a[c]&&f.push(a[c][0]),a[c]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(s&&s(t);f.length;)f.shift()();return o.push.apply(o,u||[]),r()}function r(){for(var e,t=0;t<o.length;t++){for(var r=o[t],n=!0,l=1;l<r.length;l++){var i=r[l];0!==a[i]&&(n=!1)}n&&(o.splice(t--,1),e=c(c.s=r[0]))}return e}var n={},a={0:0},o=[];function c(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,c),r.l=!0,r.exports}c.m=e,c.c=n,c.d=function(e,t,r){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(c.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)c.d(r,n,function(t){return e[t]}.bind(null,n));return r},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="";var l=window.webpackJsonp=window.webpackJsonp||[],i=l.push.bind(l);l.push=t,l=l.slice();for(var u=0;u<l.length;u++)t(l[u]);var s=i;o.push([195,1]),r()}({131:function(e){e.exports=JSON.parse('[{"id":1,"name":"Илья Емельянов","isArchive":false,"role":"driver","phone":"+7 (883) 508-3269","birthday":"12.02.1982"},{"id":2,"name":"Александр Ларионов","isArchive":true,"role":"waiter","phone":"+7 (823) 440-3602","birthday":"26.01.1986"},{"id":3,"name":"Богдан Давыдов","isArchive":false,"role":"driver","phone":"+7 (971) 575-2645","birthday":"29.11.1990"},{"id":4,"name":"Олимпиада Макарова","isArchive":true,"role":"waiter","phone":"+7 (945) 447-2286","birthday":"06.01.1987"},{"id":5,"name":"Алла Котова","isArchive":false,"role":"cook","phone":"+7 (948) 523-2964","birthday":"26.01.1982"},{"id":6,"name":"Кира Колесникова","isArchive":true,"role":"cook","phone":"+7 (929) 592-3637","birthday":"25.02.1972"},{"id":7,"name":"Александр Третьяков","isArchive":false,"role":"driver","phone":"+7 (872) 568-2916","birthday":"31.05.1979"},{"id":8,"name":"Пелагея Морозова","isArchive":false,"role":"driver","phone":"+7 (977) 521-3479","birthday":"11.09.1981"},{"id":9,"name":"Агафон Громов","isArchive":true,"role":"driver","phone":"+7 (868) 569-3159","birthday":"07.06.1988"},{"id":10,"name":"Владлен Тетерин","isArchive":true,"role":"driver","phone":"+7 (808) 592-2480","birthday":"20.06.1978"},{"id":11,"name":"Валерий Пестов","isArchive":false,"role":"cook","phone":"+7 (899) 403-2387","birthday":"20.01.1987"},{"id":12,"name":"Даниил Кузнецов","isArchive":true,"role":"waiter","phone":"+7 (933) 582-2673","birthday":"25.05.1987"},{"id":13,"name":"Фёдор Веселов","isArchive":true,"role":"waiter","phone":"+7 (951) 517-3787","birthday":"16.12.1972"},{"id":14,"name":"Пантелеймон Ефимов","isArchive":true,"role":"cook","phone":"+7 (807) 492-3627","birthday":"17.04.1986"},{"id":15,"name":"Иванна Калашникова","isArchive":true,"role":"waiter","phone":"+7 (927) 488-2568","birthday":"24.03.1982"},{"id":16,"name":"Прасковья Кондратьева","isArchive":true,"role":"cook","phone":"+7 (875) 517-3873","birthday":"07.06.1983"},{"id":17,"name":"Евдокия Филиппова","isArchive":false,"role":"waiter","phone":"+7 (877) 450-3253","birthday":"03.12.1994"}]')},152:function(e,t,r){},170:function(e,t,r){},171:function(e,t,r){},172:function(e,t,r){},174:function(e,t,r){},175:function(e,t,r){},176:function(e,t,r){},177:function(e,t,r){},178:function(e,t,r){},179:function(e,t,r){},180:function(e,t,r){},184:function(e,t,r){},185:function(e,t,r){},186:function(e,t,r){},187:function(e,t,r){},188:function(e,t,r){},195:function(e,t,r){"use strict";r.r(t);var n=r(0),a=r.n(n),o=r(50),c=r.n(o),l=r(9),i=r(18),u=Object(n.createContext)(),s=u.Provider,m=u.Consumer,f=(r(36),r(42),r(43),r(31),r(80),r(81),r(32),r(83),r(45),r(46),r(47),r.p+"images/error-20f93db.gif"),p=(r(152),function(){return a.a.createElement("div",{className:"error-indicator"},a.a.createElement("div",{className:"error-indicator__msg"},"Приносим извинения.",a.a.createElement("br",null),"Сервис, к сожалению, временно не доступен.",a.a.createElement("br",null),"Мы уже рашаем эту проблему."),a.a.createElement("div",{className:"error-indicator__picture"},a.a.createElement("img",{src:f,alt:"Error happened"})))}),d=function(e){return{type:"FETCH_DATA_FAILURE",error:e}},h=function(e,t){console.log("*** Фильтруем сотрудников по Должности."),e({type:"FILTER_ROLE_ITEMS",role:t})},y=(r(48),r(60),r(154),function(e,t,r){switch(t){case"name":console.log("*** Сортируем список сотрудников по Имени."),r.sort((function(e,t){return e.name>t.name?1:-1}));break;case"birthday":console.log("*** Сортируем список сотрудников по Дате рождения.");var n=function(e){var t=e.split(".");return new Date(t[2],t[1],t[0]).getTime()};r.sort((function(e,t){return n(e.birthday)>n(t.birthday)?1:-1}));break;default:console.log("*** Рассортировываем список сотрудников = Сортируем по ID."),r.sort((function(e,t){return e.id>t.id?1:-1}))}e({type:"SORT_DATA",data:r,sortMethod:t})}),b=function(e,t){console.log("*** Меняем данные сотрудника в Store для котролируемых элементов формы."),e({type:"PUSH_FORM_DATA_TO_STORE",propName:"role",newState:t})},E=function(e,t){return{type:"PUSH_FORM_DATA_TO_STORE",propName:e,newState:t}};r(116),r(156),r(118);function v(){return(v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var _=function(e,t,r){return e.length?e.map((function(e){return a.a.createElement(t,v({key:e.id,payload:r},e))})):null},g={waiter:"Официант",driver:"Водитель",cook:"Повар"},O=function(e){return g[e]},A=function(e){for(var t in g)if(g[t]===e)return t},S=function(e,t,r){return{type:"ROUTING",history:e,method:t,location:r}},w=function(e,t,r,n,a,o,c,l,i,u){t.preventDefault();var s=""!==r,m=!!n.match(/^((8|\+7)[- ]?)?(\(?\d{3}\)?[- ]?)?[\d\- ]{5,10}$/i),f=!!a.match(/^[0-3]?[0-9].[0-3]?[0-9].(?:[0-9]{2})?[0-9]{2}$/i),p=""!==o,d=function(t,r){e(E(r,!!t))};if(console.log("*** Валидируем Имя и меняем состояние ошибки Имени."),d(s,"validName"),console.log("*** Валидируем Телефон и мняем состояние ошибки Телефона."),d(m,"validPhone"),console.log("*** Валидируем Дату рождения и меняем состояние ошибки Даты рождения."),d(f,"validBirthday"),console.log("*** Валидируем Должность и меняем состояние ошибки Должности."),d(p,"validRole"),s&&m&&f&&p){var h={id:i?parseInt(i):Math.floor(9999999*Math.random()),name:r,isArchive:c,role:A(o),phone:n,birthday:a};i?(console.log("*** Обновляем данные сотрудника."),e(F(h,u))):(console.log("*** Добавляем нового сотрудника."),e(j(h))),console.log("*** Диспатчим роутетинг на главную страницу."),e(S(l,"push","/"))}},j=function(e){return{type:"ADD_EMPLOYEE",employee:e}},N=function(e){e({type:"CLEAN_FORM"})},T=(r(119),function(e,t,r){var n=t.filter((function(e){return e.id===parseInt(r)}));n[0].role=O(n[0].role),e(function(e){return{type:"SET_EMPLOYEE_FORM",payload:e}}(n[0]))});r(85),r(158),r(120),r(125);function P(e){return function(e){if(Array.isArray(e))return R(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return R(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return R(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var F=function(e,t){var r=t.findIndex((function(t){return t.id===e.id}));return{type:"UPDATE_EMPLOYEE",payload:[].concat(P(t.slice(0,r)),[e],P(t.slice(r+1)))}};function k(e){return(k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=L(e);if(t){var a=L(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return x(this,r)}}function x(e,t){return!t||"object"!==k(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function L(e){return(L=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(c,e);var t,r,n,o=I(c);function c(){return D(this,c),o.apply(this,arguments)}return t=c,(r=[{key:"componentDidCatch",value:function(e,t){d(e)}},{key:"render",value:function(){var e=this.props.articlesError;return e?(console.log(e),a.a.createElement(p,null)):this.props.children}}])&&M(t.prototype,r),n&&M(t,n),c}(n.Component),H={fetchDataFailure:d},B=Object(l.b)((function(e){return{error:e.error}}),H)(U),Y=(r(160),r(131));var V=r(5),$=r(196),G=r(197),J=r(198),Q=(r(170),function(){return a.a.createElement("header",{className:"header"},a.a.createElement($.a,null,a.a.createElement(G.a,null,a.a.createElement(J.a,null,a.a.createElement("h1",null,"Агаев Анар"),a.a.createElement("p",{className:"header__paragraph"},a.a.createElement("span",{className:"header__paragraph-caption"},"Резюме на hh.ru:"),a.a.createElement("a",{href:"https://hh.ru/resume/3a898035ff02716b960039ed1f663746394c34",className:"header__link",target:"_blank",rel:"noopener noreferrer"},"hh.ru/resume/3a898035ff02716b960039ed1f663746394c34")),a.a.createElement("p",{className:"header__paragraph"},a.a.createElement("span",{className:"header__paragraph-caption"},"Исходный код на Github:"),a.a.createElement("a",{href:"https://github.com/AnarAgaev/PFTest",className:"header__link",target:"_blank",rel:"noopener noreferrer"},"github.com/AnarAgaev/PFTest")),a.a.createElement("p",{className:"header__paragraph"},a.a.createElement("span",{className:"header__paragraph-caption"},"Посмотреть билд:"),a.a.createElement("a",{href:"https://github.com/AnarAgaev/anaragaev.github.io",className:"header__link",target:"_blank",rel:"noopener noreferrer"},"github.com/AnarAgaev/anaragaev.github.io")),a.a.createElement("h2",null,"Задание:"),a.a.createElement("span",{className:"header__subtitle"},"В рамках тестового задания необходимо реализовать вывод списка сотрудников с возможность фильтрации по категориям Официант, Водитель, Повар и по состоянию В Архиве, а также сортировки по Имени и Дате рождения."),a.a.createElement("span",{className:"header__subtitle"},"Необходимо реализовать возможность редактирования данных сотрудника в отдельной форме.Форма открывается по клику на сотрудника в списке сотрудников."),a.a.createElement("span",{className:"header__subtitle"},"Необходимо реализовать возможность добавление новых сотрудников."),a.a.createElement("span",{className:"header__subtitle"},"Во время работы с приложение все действия должны выводиться в консоль."),a.a.createElement("span",{className:"header__subtitle"},"Исходные данные расположены в файле employees.json")))))}),q=r(21);function z(){return(z=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var K=function(){return function(e){return function(t){return a.a.createElement(m,null,(function(r){return a.a.createElement(e,z({},t,{dataService:r}))}))}}},W=(r(171),function(e){var t=e.visible?"spinner visible":"spinner";return a.a.createElement("div",{className:t},a.a.createElement("div",{className:"loading"},a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null)))}),X=(r(172),Object(l.b)((function(e){return{filterArchive:e.filterArchive,filterRole:e.filterRole}}))((function(e){var t=e.id,r=e.name,n=e.role,o=e.isArchive,c=e.phone,l=e.birthday,u=e.filterArchive,s=e.filterRole,m=!(u&&!o)&&(!s||s===n)?"employees-list__item":"employees-list__item employees-list__item_hide",f="".concat(t,": ").concat(r," (").concat(O(n),"),\n    Телефон: ").concat(c,",\n    Дата рждения: ").concat(l,", \n    В архиве: ").concat(o?"да":"нет");return a.a.createElement("tr",{className:m,title:f},a.a.createElement("td",{className:"employees-list__name"},a.a.createElement(i.b,{to:"edit-employee/".concat(t)},r)),a.a.createElement("td",{className:"employees-list__role"},O(n)),a.a.createElement("td",{className:"employees-list__phone"},c))}))),Z=(r(174),function(e){var t=e.data,r=_(t,X);return a.a.createElement(G.a,null,a.a.createElement(J.a,null,a.a.createElement("table",{className:"employees-list"},a.a.createElement("tbody",null,r))))}),ee=(r(175),Object(l.b)((function(e){return{data:e.data}}),(function(e){return{actionFunc:function(t,r,n){return t(e,r,n)}}}))((function(e){var t=e.val,r=e.caption,n=e.payload,o=e.actionFunc,c=e.data;return void 0===r&&(r=t),a.a.createElement("li",{className:"select__option",onClick:function(){return o(n,t,c)}},r)}))),te=(r(176),function(e){var t=e.list,r=e.placeholder,n=e.actionFunc,o=e.value,c=_(t,ee,n);return a.a.createElement("div",{className:"select"},a.a.createElement("input",{type:"text",placeholder:r,value:o,readOnly:!0}),a.a.createElement("ul",{className:"select__data-list"},c))}),re={name:"Имя",birthday:"Дата рождения",false:""},ne=function(e){return re[e]},ae=(r(177),Object(l.b)((function(e){return{filterArchive:e.filterArchive}}),(function(e){return{filterItemsByArchive:function(t){return function(e,t){console.log("*** Фильтруем сотрудников по состоянию В архиве."),e({type:"FILTER_ARCHIVE_ITEMS",filterState:!t})}(e,t)}}}))((function(e){var t=e.filterArchive,r=e.filterItemsByArchive;return a.a.createElement("div",{className:"checkbox"},a.a.createElement("input",{type:"checkbox",className:"checkbox__controller",id:"checkbox",checked:t,onChange:function(){return r(t)}}),a.a.createElement("label",{htmlFor:"checkbox"},"в архиве"))}))),oe=(r(178),[{id:1,val:"name",caption:"Имя"},{id:2,val:"birthday",caption:"Дата рождения"},{id:3,val:!1,caption:"Не сортировать"}]),ce=[{id:1,val:"waiter",caption:"Официант"},{id:2,val:"driver",caption:"Водитель"},{id:3,val:"cook",caption:"Повар"},{id:4,val:!1,caption:"Показать всех"}],le=Object(l.b)((function(e){return{filterRole:e.filterRole,sortMethod:e.sortMethod}}))((function(e){var t=e.filterRole,r=e.sortMethod;return a.a.createElement("form",{className:"controls"},a.a.createElement(G.a,null,a.a.createElement(J.a,{lg:6},a.a.createElement("div",{className:"controls__wrap"},a.a.createElement("span",{className:"controls__title"},"Фильтр"),a.a.createElement(te,{list:ce,actionFunc:h,value:O(t)||"",placeholder:"Выберите фильтр"}),a.a.createElement(ae,null))),a.a.createElement(J.a,{lg:6},a.a.createElement("div",{className:"controls__wrap"},a.a.createElement("span",{className:"controls__title"},"Сортировка"),a.a.createElement(te,{list:oe,actionFunc:y,value:ne(r)||"",placeholder:"Выберите метод сортировки"})))))})),ie=(r(179),function(){return a.a.createElement(G.a,null,a.a.createElement(J.a,{className:"my-5"},a.a.createElement(i.b,{className:"button",to:"/add-employee"},"Добавить сотрудника")))}),ue=r(26);r(180);function se(e){return(se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function me(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function fe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function pe(e,t){return(pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function de(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=ye(e);if(t){var a=ye(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return he(this,r)}}function he(e,t){return!t||"object"!==se(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ye(e){return(ye=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var be=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pe(e,t)}(c,e);var t,r,n,o=de(c);function c(){return me(this,c),o.apply(this,arguments)}return t=c,(r=[{key:"componentDidMount",value:function(){this.props.data.length||this.props.fetchData()}},{key:"render",value:function(){var e=this.props,t=e.data,r=e.loading,n=e.error;return r?a.a.createElement(W,{visible:r}):n?a.a.createElement(p,null):a.a.createElement(a.a.Fragment,null,a.a.createElement(ue.a,null,a.a.createElement("title",null,"Главная страница"),a.a.createElement("meta",{name:"description",content:""}),a.a.createElement("meta",{name:"keywords",content:""})),a.a.createElement($.a,null,a.a.createElement(le,null),a.a.createElement(Z,{data:t}),a.a.createElement(ie,null)))}}])&&fe(t.prototype,r),n&&fe(t,n),c}(n.Component),Ee=Object(q.c)(K(),Object(l.b)((function(e){return{data:e.data,loading:e.loading,error:e.error}}),(function(e,t){var r=t.dataService;return{fetchData:function(){return function(e,t){console.log("*** Заправшиваем данные из файла employee.json"),e({type:"FETCH_DATA_REQUEST"}),t.getData().then((function(t){console.log("*** Размещаем полученные из файла employee.json данные в Store"),e({type:"FETCH_DATA_SUCCESS",data:t})})).catch((function(t){console.log("*** В процессе получения данных возникла ошибка."),console.log(t),e(d(t))}))}(e,r)}}})))(be),ve=r(89),_e=r.n(ve);r(184);function ge(e){return(ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Oe(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ae(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Se(e,t){return(Se=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function we(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Ne(e);if(t){var a=Ne(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return je(this,r)}}function je(e,t){return!t||"object"!==ge(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ne(e){return(Ne=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Te=[{id:1,val:"Официант"},{id:2,val:"Водитель"},{id:3,val:"Повар"}],Pe=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Se(e,t)}(c,e);var t,r,n,o=we(c);function c(){return Oe(this,c),o.apply(this,arguments)}return t=c,(r=[{key:"componentDidMount",value:function(){var e=this.props,t=e.data,r=e.employeeId,n=e.getEmployee,a=e.cleanForm;console.log("*** Чистим данные и ошибки формы сотрудника перед открытием формы."),a(),r&&(console.log("*** Получаем дынные редактирумого сотрудника и размещаем в свойствах Store для контролируемых элементов"),n(t,r))}},{key:"render",value:function(){var e=this.props,t=e.employeeForm,r=e.pushValue,n=e.formSubmit,o=e.history,c=e.btnLabel,l=e.employeeId,u=e.data,s=t.name,m=t.phone,f=t.birthday,p=t.role,d=t.isArchive,h=t.validName,y=t.validPhone,E=t.validBirthday,v=t.validRole;return a.a.createElement("form",{className:"form-employee",onSubmit:function(e){return n(e,s,m,f,p,d,o,l,u)}},a.a.createElement("div",{className:"form-employee__group ".concat(!h&&"has-error")},a.a.createElement("label",{htmlFor:"name"},"Имя"),a.a.createElement("input",{type:"text",id:"name",placeholder:"Иванов Иван Иванович",onChange:function(e){return r(e,"name")},value:s}),a.a.createElement("span",{className:"error"},"Не корректное Имя")),a.a.createElement("div",{className:"form-employee__group ".concat(!y&&"has-error")},a.a.createElement("label",{htmlFor:"phone"},"Телефон"),a.a.createElement(_e.a,{type:"text",mask:"+7 (999) 999-9999",id:"phone",placeholder:"+7 (000) 000-0000",onChange:function(e){return r(e,"phone")},value:m.value?m.value:m}),a.a.createElement("span",{className:"error"},"Не корректный телефон")),a.a.createElement("div",{className:"form-employee__group ".concat(!E&&"has-error")},a.a.createElement("label",{htmlFor:"birthday"},"Дата рождения"),a.a.createElement(_e.a,{type:"text",mask:"99.99.9999",id:"birthday",placeholder:"ДД.ММ.ГГГГ",onChange:function(e){return r(e,"birthday")},value:f.value?f.value:f}),a.a.createElement("span",{className:"error"},"Не корректная дата")),a.a.createElement("div",{className:"form-employee__group ".concat(!v&&"has-error")},a.a.createElement("label",{htmlFor:"role"},"Должность"),a.a.createElement(te,{list:Te,actionFunc:b,value:p||"",placeholder:"Выберите должность"}),a.a.createElement("span",{className:"error"},"Необходимо выбрать должность")),a.a.createElement("div",{className:"checkbox"},a.a.createElement("input",{type:"checkbox",className:"checkbox__controller",id:"isArchive",onChange:function(e){return r(e,"isArchive")},checked:d&&"checked"}),a.a.createElement("label",{htmlFor:"isArchive"},"В архиве")),a.a.createElement("button",{type:"submit",className:"button"},c),a.a.createElement(i.b,{to:"/",className:"button"},"Отмена"))}}])&&Ae(t.prototype,r),n&&Ae(t,n),c}(n.Component),Re=Object(l.b)((function(e){return{employeeForm:e.employeeForm,data:e.data}}),(function(e){return{pushValue:function(t,r){return function(e,t,r){var n="isArchive"===r?t.target.checked:t.target.value;console.log("*** Меняем данные сотрудника в Store для котролируемых элементов формы."),e({type:"PUSH_FORM_DATA_TO_STORE",propName:r,newState:n})}(e,t,r)},formSubmit:function(t,r,n,a,o,c,l,i,u){return w(e,t,r,n,a,o,c,l,i,u)},getEmployee:function(t,r){return T(e,t,r)},cleanForm:function(){return N(e)}}}))(Object(V.g)(Pe)),Fe=(r(185),function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(ue.a,null,a.a.createElement("title",null,"Добавить сотрудника"),a.a.createElement("meta",{name:"description",content:""}),a.a.createElement("meta",{name:"keywords",content:""})),a.a.createElement($.a,null,a.a.createElement(G.a,null,a.a.createElement(J.a,{md:8,className:"mb-3"},a.a.createElement("h1",null,"Добавить сотрудника"))),a.a.createElement(G.a,null,a.a.createElement(J.a,{md:8},a.a.createElement(Re,{btnLabel:"Добавить сотрудника"})))))}),ke=(r(186),function(e){var t=e.employeeId;return a.a.createElement(a.a.Fragment,null,a.a.createElement(ue.a,null,a.a.createElement("title",null,"Редактирование данных сотрудника"),a.a.createElement("meta",{name:"description",content:""}),a.a.createElement("meta",{name:"keywords",content:""})),a.a.createElement($.a,null,a.a.createElement(G.a,null,a.a.createElement(J.a,{md:8,className:"mb-3"},a.a.createElement("h1",null,"Редактирование данных сотрудника"))),a.a.createElement(G.a,null,a.a.createElement(J.a,{md:8},a.a.createElement(Re,{employeeId:t,btnLabel:"Сохранить изменения"})))))}),De=(r(187),function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(ue.a,null,a.a.createElement("title",null,"Страница не найдена"),a.a.createElement("meta",{name:"description",content:""}),a.a.createElement("meta",{name:"keywords",content:""})),a.a.createElement($.a,{className:"pnf"},a.a.createElement(G.a,null,a.a.createElement(J.a,{lg:8},a.a.createElement("img",{src:f,alt:"Page not found",className:"pnf-pic"}),a.a.createElement("h1",null,"Страница не найдена"),a.a.createElement("h3",{className:"pb-5"},"К сожалению, данной страницы на сайте больше нет. Возможно, она переименована, перенесена в другой раздел или удалена."),a.a.createElement(i.b,{to:"/",className:"button"},"Перейти на главную")))))}),Me=(r(188),function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(Q,null),a.a.createElement("main",{className:"main"},a.a.createElement(V.d,null,a.a.createElement(V.b,{path:"/",component:Ee,exact:!0}),a.a.createElement(V.b,{path:"/add-employee",component:Fe}),a.a.createElement(V.b,{path:"/edit-employee/:id",render:function(e){var t=e.match.params.id;return a.a.createElement(ke,{employeeId:t})}}),a.a.createElement(V.b,{path:"/page-not-found",component:De}),a.a.createElement(V.a,{to:"/page-not-found"}))),a.a.createElement(W,null))}),Ce=r(135),Ie=r.n(Ce);r(189),r(191),r(192),r(193),r(194);function xe(e){return function(e){if(Array.isArray(e))return Le(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Le(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Le(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Le(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Ue(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function He(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ue(Object(r),!0).forEach((function(t){Be(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ue(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Be(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Ye=function(e,t){if(void 0===e)return{data:[],loading:!1,error:null,filterArchive:!1,filterRole:!1,sortMethod:!1,employeeForm:{name:"",phone:"",birthday:"",role:"",isArchive:!1,validName:!0,validPhone:!0,validBirthday:!0,validRole:!0}};switch(t.type){case"FETCH_DATA_REQUEST":return He(He({},e),{},{loading:!0});case"FETCH_DATA_SUCCESS":return He(He({},e),{},{data:xe(t.data),loading:!1});case"FETCH_DATA_FAILURE":return He(He({},e),{},{loading:!1,error:t.error});case"FILTER_ARCHIVE_ITEMS":return He(He({},e),{},{filterArchive:t.filterState});case"FILTER_ROLE_ITEMS":return He(He({},e),{},{filterRole:t.role});case"SORT_DATA":return He(He({},e),{},{data:xe(t.data),sortMethod:t.sortMethod});case"PUSH_FORM_DATA_TO_STORE":return He(He({},e),{},{employeeForm:He(He({},e.employeeForm),{},Be({},t.propName,t.newState))});case"SET_EMPLOYEE_FORM":var r=t.payload,n=r.id,a=r.name,o=r.phone,c=r.birthday,l=r.role,i=r.isArchive;return He(He({},e),{},{employeeForm:He(He({},e.employeeForm),{},{id:n,name:a,phone:o,birthday:c,role:l,isArchive:i})});case"CLEAN_FORM":return He(He({},e),{},{employeeForm:{name:"",phone:"",birthday:"",role:"",isArchive:!1,validName:!0,validPhone:!0,validBirthday:!0,validRole:!0}});case"ADD_EMPLOYEE":return He(He({},e),{},{data:[].concat(xe(e.data),[t.employee])});case"UPDATE_EMPLOYEE":return He(He({},e),{},{data:xe(t.payload)});default:return e}},Ve=Object(q.d)(Ye,Object(q.c)(Object(q.a)(Ie.a),Object(q.a)((function(e){return function(e){return function(t){return"ROUTING"===t.type&&t.history[t.method](t.location),e(t)}}})))),$e=new function e(){var t,r,n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=function(){return new Promise((function(e,t){setTimeout((function(){e(Y),t(new Error("Ошибка. К сожалению, не удалось полуычить данные!"))}),2e3)}))},(r="getData")in(t=this)?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n};c.a.render(a.a.createElement(l.a,{store:Ve},a.a.createElement(B,null,a.a.createElement(s,{value:$e},a.a.createElement(i.a,null,a.a.createElement(Me,null))))),document.getElementById("root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,